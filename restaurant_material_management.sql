-- üîπ T·∫°o database
CREATE DATABASE IF NOT EXISTS restaurant_material_management;
USE restaurant_material_management;

-- üîπ B·∫£ng roles - Qu·∫£n l√Ω Ph√¢n quy·ªÅn Ng∆∞·ªùi d√πng
CREATE TABLE roles (
    role_id INT AUTO_INCREMENT PRIMARY KEY,
    role_name VARCHAR(50) NOT NULL UNIQUE -- Vai tr√≤: Admin, Gi√°m ƒë·ªëc, Qu·∫£n l√Ω kho, Nh√¢n vi√™n kho, Nh√¢n vi√™n nh√† h√†ng
);

-- üîπ B·∫£ng users - Qu·∫£n l√Ω T√†i kho·∫£n Ng∆∞·ªùi d√πng
CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    full_name VARCHAR(100) NOT NULL, -- H·ªç v√† t√™n ng∆∞·ªùi d√πng
    email VARCHAR(100) UNIQUE NOT NULL, -- Email ƒëƒÉng nh·∫≠p
    password VARCHAR(20) NOT NULL, -- M·∫≠t kh·∫©u cho ph√©p ch·ªØ + s·ªë, kh√¥ng hash
    role_id INT NOT NULL, -- Quy·ªÅn c·ªßa ng∆∞·ªùi d√πng
    FOREIGN KEY (role_id) REFERENCES roles(role_id)
);

-- üîπ B·∫£ng suppliers - Nh√† Cung C·∫•p
CREATE TABLE suppliers (
    supplier_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL, -- T√™n nh√† cung c·∫•p
    contact_info TEXT, -- Th√¥ng tin li√™n h·ªá
    address VARCHAR(255) -- ƒê·ªãa ch·ªâ nh√† cung c·∫•p
);

-- üîπ B·∫£ng categories - Danh M·ª•c V·∫≠t T∆∞
CREATE TABLE categories (
    category_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL, -- T√™n danh m·ª•c v·∫≠t t∆∞
    parent_id INT DEFAULT NULL, -- Danh m·ª•c cha (ph√¢n c·∫•p danh m·ª•c)
    FOREIGN KEY (parent_id) REFERENCES categories(category_id)
);

-- üîπ B·∫£ng materials - Qu·∫£n l√Ω V·∫≠t T∆∞
CREATE TABLE materials (
    material_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL, -- T√™n v·∫≠t t∆∞
    category_id INT NOT NULL, -- Thu·ªôc danh m·ª•c n√†o
    supplier_id INT, -- Nh√† cung c·∫•p c·ªßa v·∫≠t t∆∞ n√†y
    image_url VARCHAR(255), -- ·∫¢nh minh h·ªça v·∫≠t t∆∞
    material_condition ENUM('new', 'used', 'damaged'), -- T√¨nh tr·∫°ng v·∫≠t t∆∞
    price DECIMAL(12,2) NOT NULL, -- Gi√° v·∫≠t t∆∞
    description TEXT, -- M√¥ t·∫£ chi ti·∫øt v·∫≠t t∆∞
    FOREIGN KEY (category_id) REFERENCES categories(category_id),
    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)
);

-- üîπ B·∫£ng inventory - Qu·∫£n l√Ω Kho V·∫≠t T∆∞
CREATE TABLE inventory (
    inventory_id INT AUTO_INCREMENT PRIMARY KEY,
    material_id INT NOT NULL, -- V·∫≠t t∆∞ ƒë∆∞·ª£c qu·∫£n l√Ω trong kho
    quantity INT NOT NULL, -- S·ªë l∆∞·ª£ng t·ªìn kho
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- C·∫≠p nh·∫≠t th·ªùi gian khi c√≥ thay ƒë·ªïi
    FOREIGN KEY (material_id) REFERENCES materials(material_id)
);

-- üîπ B·∫£ng import_forms - Phi·∫øu Nh·∫≠p Kho
CREATE TABLE import_forms (
    import_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL, -- Ng∆∞·ªùi th·ª±c hi·ªán nh·∫≠p kho
    supplier_id INT, -- Nh√† cung c·∫•p li√™n quan ƒë·∫øn nh·∫≠p h√†ng (n·∫øu c√≥)
    import_date DATETIME DEFAULT CURRENT_TIMESTAMP, -- Th·ªùi gian nh·∫≠p kho
    note TEXT, -- Ghi ch√∫ v·ªÅ nh·∫≠p kho
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)
);

-- üîπ B·∫£ng export_forms - Phi·∫øu Xu·∫•t Kho
CREATE TABLE export_forms (
    export_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL, -- Ng∆∞·ªùi th·ª±c hi·ªán xu·∫•t kho
    export_date DATETIME DEFAULT CURRENT_TIMESTAMP, -- Th·ªùi gian xu·∫•t kho
    recipient VARCHAR(100), -- Ng∆∞·ªùi nh·∫≠n v·∫≠t t∆∞
    note TEXT, -- Ghi ch√∫ xu·∫•t kho
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- üîπ B·∫£ng material_history - L·ªãch s·ª≠ Nh·∫≠p/Xu·∫•t V·∫≠t T∆∞
CREATE TABLE material_history (
    history_id INT AUTO_INCREMENT PRIMARY KEY,
    material_id INT NOT NULL, -- V·∫≠t t∆∞ li√™n quan ƒë·∫øn l·ªãch s·ª≠
    quantity INT NOT NULL, -- S·ªë l∆∞·ª£ng thay ƒë·ªïi
    action_type ENUM('import', 'export') NOT NULL, -- H√†nh ƒë·ªông: Nh·∫≠p ho·∫∑c Xu·∫•t
    reference_id INT NOT NULL, -- Li√™n k·∫øt ƒë·∫øn phi·∫øu nh·∫≠p/xu·∫•t
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP, -- Th·ªùi ƒëi·ªÉm x·∫£y ra h√†nh ƒë·ªông
    FOREIGN KEY (material_id) REFERENCES materials(material_id)
);

-- üîπ B·∫£ng request_types - Lo·∫°i Y√™u C·∫ßu
CREATE TABLE request_types (
    request_type_id INT AUTO_INCREMENT PRIMARY KEY,
    type_name VARCHAR(100) NOT NULL -- Lo·∫°i y√™u c·∫ßu (Xu·∫•t kho, Mua v·∫≠t t∆∞, S·ª≠a ch·ªØa...)
);

-- üîπ B·∫£ng requests - Y√™u C·∫ßu Xu·∫•t/Mua/S·ª≠a V·∫≠t T∆∞
CREATE TABLE requests (
    request_id INT AUTO_INCREMENT PRIMARY KEY,
    requester_id INT NOT NULL, -- Ng∆∞·ªùi y√™u c·∫ßu
    request_type_id INT NOT NULL, -- Lo·∫°i y√™u c·∫ßu
    material_id INT NOT NULL, -- V·∫≠t t∆∞ li√™n quan
    quantity INT NOT NULL, -- S·ªë l∆∞·ª£ng y√™u c·∫ßu
    reason TEXT, -- L√Ω do y√™u c·∫ßu
    status ENUM('pending', 'approved', 'rejected') DEFAULT 'pending', -- Tr·∫°ng th√°i x·ª≠ l√Ω
    response_note TEXT, -- L√Ω do ch·∫•p nh·∫≠n/t·ª´ ch·ªëi y√™u c·∫ßu
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP, -- Th·ªùi gian y√™u c·∫ßu
    responded_by INT DEFAULT NULL, -- Ng∆∞·ªùi x·ª≠ l√Ω y√™u c·∫ßu
    responded_at DATETIME DEFAULT NULL, -- Th·ªùi gian ph·∫£n h·ªìi y√™u c·∫ßu
    FOREIGN KEY (requester_id) REFERENCES users(user_id),
    FOREIGN KEY (responded_by) REFERENCES users(user_id),
    FOREIGN KEY (material_id) REFERENCES materials(material_id),
    FOREIGN KEY (request_type_id) REFERENCES request_types(request_type_id)
);

-- üîπ B·∫£ng approval_history - L·ªãch s·ª≠ Ph√™ Duy·ªát Y√™u C·∫ßu
CREATE TABLE approval_history (
    approval_id INT AUTO_INCREMENT PRIMARY KEY,
    request_id INT NOT NULL, -- Li√™n k·∫øt v·ªõi y√™u c·∫ßu
    approved_by INT NOT NULL, -- Ng∆∞·ªùi ph√™ duy·ªát
    status ENUM('approved', 'rejected') NOT NULL, -- Tr·∫°ng th√°i ph√™ duy·ªát
    reason TEXT, -- L√Ω do ph√™ duy·ªát/t·ª´ ch·ªëi
    approved_at DATETIME DEFAULT CURRENT_TIMESTAMP, -- Th·ªùi gian ph√™ duy·ªát
    FOREIGN KEY (request_id) REFERENCES requests(request_id),
    FOREIGN KEY (approved_by) REFERENCES users(user_id)
);
